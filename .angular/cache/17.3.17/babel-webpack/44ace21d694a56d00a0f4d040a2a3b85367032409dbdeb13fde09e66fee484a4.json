{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { marked } from 'marked';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nfunction AnalysisDialogComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 18)(2, \"div\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 20);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"metricLabel\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const k_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.displayKpi[k_r1]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 2, k_r1));\n  }\n}\nexport let AnalysisDialogComponent = /*#__PURE__*/(() => {\n  class AnalysisDialogComponent {\n    constructor(data, sanitizer) {\n      this.data = data;\n      this.sanitizer = sanitizer;\n      this.objectKeys = Object.keys;\n      /** KPI map with \"longest\" flattened into a readable string */\n      this.displayKpi = {};\n      /*  1 — build friendly KPI map */\n      this.displayKpi = {\n        ...data.kpi\n      };\n      if (typeof data.kpi.longest === 'object' && data.kpi.longest) {\n        const l = data.kpi.longest;\n        this.displayKpi['longest'] = `${l.duration} (${l.from_name} → ${l.to_name})`;\n      }\n      /*  2 — convert Markdown → HTML and mark it safe */\n      const html = marked.parse(data.summary || ''); // cast to string to satisfy TS\n      this.summaryHtml = this.sanitizer.bypassSecurityTrustHtml(html);\n    }\n    /**\n     * Returns appropriate Material icon name based on KPI key\n     */\n    getKpiIcon(kpiKey) {\n      const iconMap = {\n        'calls': 'phone',\n        'duration': 'schedule',\n        'success': 'check_circle',\n        'missed': 'phone_missed',\n        'answered': 'call_received',\n        'outbound': 'call_made',\n        'inbound': 'call_received',\n        'average': 'trending_up',\n        'total': 'analytics',\n        'rate': 'percent',\n        'volume': 'volume_up',\n        'longest': 'timer',\n        'shortest': 'timer_off',\n        'failed': 'error',\n        'busy': 'phone_busy',\n        'voicemail': 'voicemail',\n        'transfer': 'call_split',\n        'hold': 'pause_circle',\n        'queue': 'queue',\n        'agent': 'person',\n        'customer': 'people',\n        'satisfaction': 'sentiment_satisfied',\n        'resolution': 'task_alt',\n        'escalation': 'trending_up',\n        'abandoned': 'call_end',\n        'wait': 'access_time',\n        'response': 'reply'\n      };\n      // Find the best matching icon based on key content\n      const lowerKey = kpiKey.toLowerCase();\n      // Direct match first\n      if (iconMap[lowerKey]) {\n        return iconMap[lowerKey];\n      }\n      // Partial match\n      for (const [key, icon] of Object.entries(iconMap)) {\n        if (lowerKey.includes(key)) {\n          return icon;\n        }\n      }\n      return 'insights'; // default icon\n    }\n    static {\n      this.ɵfac = function AnalysisDialogComponent_Factory(t) {\n        return new (t || AnalysisDialogComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.DomSanitizer));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AnalysisDialogComponent,\n        selectors: [[\"app-analysis-dialog\"]],\n        decls: 28,\n        vars: 6,\n        consts: [[1, \"section\", \"summary\"], [1, \"row\"], [1, \"range\"], [1, \"markdown\", 3, \"innerHTML\"], [1, \"section\", \"kpi\"], [1, \"grid\"], [4, \"ngFor\", \"ngForOf\"], [1, \"sentiment\"], [1, \"score\"], [1, \"bar\"], [1, \"good\", 2, \"flex-basis\", \"64%\"], [1, \"neutral\", 2, \"flex-basis\", \"22%\"], [1, \"bad\", 2, \"flex-basis\", \"14%\"], [1, \"section\", \"table\"], [3, \"rows\"], [1, \"section\", \"charts\"], [\"alt\", \"Call results\", 1, \"chart\", 3, \"src\"], [\"alt\", \"Daily volume\", 1, \"chart\", 3, \"src\"], [1, \"tile\"], [1, \"value\"], [1, \"label\"]],\n        template: function AnalysisDialogComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"div\", 1)(2, \"mat-icon\");\n            i0.ɵɵtext(3, \"calendar_today\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"span\", 2);\n            i0.ɵɵtext(5, \"March\\u00A01 \\u2013 30, 2025\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelement(6, \"div\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"mat-card\", 4)(8, \"div\", 5);\n            i0.ɵɵtemplate(9, AnalysisDialogComponent_ng_container_9_Template, 7, 4, \"ng-container\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"div\", 7)(11, \"span\", 8);\n            i0.ɵɵtext(12, \"64 %\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"div\", 9);\n            i0.ɵɵelement(14, \"div\", 10)(15, \"div\", 11)(16, \"div\", 12);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(17, \"mat-card\", 13)(18, \"h3\");\n            i0.ɵɵtext(19, \"Top Talk-Time Owners\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(20, \"app-simple-table\", 14);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(21, \"mat-card\", 13)(22, \"h3\");\n            i0.ɵɵtext(23, \"Top External Numbers\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(24, \"app-simple-table\", 14);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(25, \"mat-card\", 15);\n            i0.ɵɵelement(26, \"img\", 16)(27, \"img\", 17);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"innerHTML\", ctx.summaryHtml, i0.ɵɵsanitizeHtml);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.objectKeys(ctx.displayKpi));\n            i0.ɵɵadvance(11);\n            i0.ɵɵproperty(\"rows\", ctx.data.top_talk);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"rows\", ctx.data.top_numbers);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"src\", \"assets/\" + ctx.data.charts.call_result, i0.ɵɵsanitizeUrl);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"src\", \"assets/\" + ctx.data.charts.daily_volume, i0.ɵɵsanitizeUrl);\n          }\n        },\n        styles: [\".section[_ngcontent-%COMP%]{background:var(--card);border-radius:var(--radius);margin:12px 0;padding:16px;-webkit-backdrop-filter:blur(8px);backdrop-filter:blur(8px)}.summary[_ngcontent-%COMP%]   .date-row[_ngcontent-%COMP%]{display:flex;align-items:center;gap:6px;font-size:.8rem;color:var(--txt-sub);margin-bottom:6px}.kpi-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(90px,1fr));gap:10px;margin-bottom:14px}.tile[_ngcontent-%COMP%]{text-align:center;padding:10px 6px;border-radius:8px;background:var(--grad-blue)}.value[_ngcontent-%COMP%]{font:600 1.25rem/1 Roboto}.label[_ngcontent-%COMP%]{font-size:.7rem;color:var(--txt-sub);text-transform:uppercase}.sentiment[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px}.bar[_ngcontent-%COMP%]{flex:1;height:6px;border-radius:3px;overflow:hidden;display:flex}.good[_ngcontent-%COMP%]{background:#3bcf8e}.neutral[_ngcontent-%COMP%]{background:#e9c95d}.bad[_ngcontent-%COMP%]{background:#ff4f6d}.table[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin:0 0 6px;font-size:.95rem}.charts[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;border-radius:8px;margin:6px 0}\"]\n      });\n    }\n  }\n  return AnalysisDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}